Index: src/main/java/com/example/mediaplayerproject/SearchDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mediaplayerproject;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\n\r\npublic class SearchDB {\r\n    //ArrayList method for complete search button, in order to store data\r\n    public ArrayList<String> searchComplete(String searchText, boolean toggle) throws SQLException {\r\n        ArrayList<String> tempArrayList = new ArrayList<>();\r\n        ArrayList<String> sortArrayList = new ArrayList<>();\r\n        ArrayList<String> sortedMediaArrayList = new ArrayList<>();\r\n\r\n\r\n        if (!toggle) { // if toggle media is selected, makes connection to DB and executes the following sql query\r\n            Connection connection = DBConnection.getDbConnection().makeConnection();\r\n            PreparedStatement preparedStatement = connection.prepareCall(\"SELECT * FROM tblMediaInfo\");\r\n            ResultSet resultSet = preparedStatement.executeQuery();\r\n            //selects everything from tblMediaInfo and stores it in a temporary ArrayList\r\n            while (resultSet.next()) {\r\n                tempArrayList.add(resultSet.getString(2));\r\n            }\r\n            //sorts through the temporary ArrayList and compares it with what the user types in the searchbox\r\n                // in order to find a match\r\n            for (String s : tempArrayList) {\r\n                if (s.equalsIgnoreCase(searchText)) {\r\n                    sortArrayList.add(s);\r\n                }\r\n            }\r\n            return sortArrayList; // returns any matches found\r\n        }else {\r\n            // else, if toggle creator is selected, does the same thing mentioned above\r\n            Connection connection = DBConnection.getDbConnection().makeConnection();\r\n            PreparedStatement preparedStatement = connection.prepareCall(\"SELECT * FROM tblCreator\");\r\n            ResultSet resultSet = preparedStatement.executeQuery();\r\n            //adds to temporary arraylist\r\n            while (resultSet.next()) {\r\n                tempArrayList.add(resultSet.getString(2));\r\n            }\r\n            //sorts and compares\r\n            for (String s : tempArrayList) {\r\n                if (s.equalsIgnoreCase(searchText)) {\r\n                    sortArrayList.add(s);\r\n                }\r\n            }\r\n            //for every artists found in the sorted Arraylist, adds media associated with matched artist to a sortedMediaArrayList\r\n              //with an SQL innerjoin and subquery below:\r\n            for (String s : sortArrayList) {\r\n                String sqlQuery = \"Select * from tblCreatorMedia inner join tblMediaInfo on tblCreatorMedia.fldMediaId = tblMediaInfo.fldMediaId where fldCreatorId = (SELECT fldCreatorId from tblCreator where fldCreatorName = '\" + s + \"')\";\r\n                preparedStatement = connection.prepareCall(sqlQuery);\r\n                resultSet = preparedStatement.executeQuery();\r\n\r\n                while (resultSet.next()) {\r\n                    sortedMediaArrayList.add(resultSet.getString(5));\r\n                }\r\n            }\r\n            return sortedMediaArrayList; // returns media associated with artist that was typed in\r\n        }\r\n    }\r\n    //ArrayList method for partial search button for data storage\r\n    public ArrayList<String> searchPartial(String searchText, boolean toggle) throws SQLException {\r\n        ArrayList<String> tempArrayList = new ArrayList<>();\r\n        ArrayList<String> sortArrayList = new ArrayList<>();\r\n        ArrayList<String> sortedMediaArrayList = new ArrayList<>();\r\n\r\n        if (!toggle) { // if toggle media is selected connects to DB and executes sql query:\r\n            Connection connection = DBConnection.getDbConnection().makeConnection();\r\n            PreparedStatement preparedStatement = connection.prepareCall(\"SELECT * FROM tblMediaInfo\");\r\n            ResultSet resultSet = preparedStatement.executeQuery();\r\n            //selects everything from tblMediaInfo and stores it in a temporary ArrayList\r\n            while (resultSet.next()) {\r\n                tempArrayList.add(resultSet.getString(2));\r\n            }\r\n            //sorts through the temporary ArrayList and compares it with what the user types in the searchbox\r\n                // in order to find a matching media file containing anything the user types in.\r\n            for (String s : tempArrayList) {\r\n                if (s.toLowerCase().contains(searchText.toLowerCase())) {\r\n                    sortArrayList.add(s);\r\n                }\r\n            }\r\n            return sortArrayList;\r\n        }else { // same thing with creator\r\n            Connection connection = DBConnection.getDbConnection().makeConnection();\r\n            PreparedStatement preparedStatement = connection.prepareCall(\"SELECT * FROM tblCreator\");\r\n            ResultSet resultSet = preparedStatement.executeQuery();\r\n\r\n            while (resultSet.next()) {\r\n                tempArrayList.add(resultSet.getString(2));\r\n            }\r\n\r\n            for (String s : tempArrayList) {\r\n                if (s.toLowerCase().contains(searchText.toLowerCase())) {\r\n                    sortArrayList.add(s);\r\n                }\r\n            }\r\n\r\n            for (String s : sortArrayList) {\r\n                String sqlQuery = \"Select * from tblCreatorMedia inner join tblMediaInfo on tblCreatorMedia.fldMediaId = tblMediaInfo.fldMediaId where fldCreatorId = (SELECT fldCreatorId from tblCreator where fldCreatorName = '\" + s + \"')\";\r\n                preparedStatement = connection.prepareCall(sqlQuery);\r\n                resultSet = preparedStatement.executeQuery();\r\n\r\n                while (resultSet.next()) {\r\n                    if (!sortedMediaArrayList.contains(resultSet.getString(5))) {\r\n                        sortedMediaArrayList.add(resultSet.getString(5));\r\n                    }\r\n                }\r\n            }\r\n            return sortedMediaArrayList;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/mediaplayerproject/SearchDB.java b/src/main/java/com/example/mediaplayerproject/SearchDB.java
--- a/src/main/java/com/example/mediaplayerproject/SearchDB.java	(revision 68d86cdd3be5db2eaa33edd4c7dcce45acb6988b)
+++ b/src/main/java/com/example/mediaplayerproject/SearchDB.java	(date 1704880166341)
@@ -95,7 +95,6 @@
                     sortArrayList.add(s);
                 }
             }
-
             for (String s : sortArrayList) {
                 String sqlQuery = "Select * from tblCreatorMedia inner join tblMediaInfo on tblCreatorMedia.fldMediaId = tblMediaInfo.fldMediaId where fldCreatorId = (SELECT fldCreatorId from tblCreator where fldCreatorName = '" + s + "')";
                 preparedStatement = connection.prepareCall(sqlQuery);
Index: src/main/java/com/example/mediaplayerproject/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mediaplayerproject;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class HelloApplication extends Application {\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"hello-view.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load(), 320, 240);\r\n        stage.setTitle(\"Media Player\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n        launch();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/mediaplayerproject/HelloApplication.java b/src/main/java/com/example/mediaplayerproject/HelloApplication.java
--- a/src/main/java/com/example/mediaplayerproject/HelloApplication.java	(revision 68d86cdd3be5db2eaa33edd4c7dcce45acb6988b)
+++ b/src/main/java/com/example/mediaplayerproject/HelloApplication.java	(date 1704880166375)
@@ -18,7 +18,6 @@
     }
 
     public static void main(String[] args) {
-
         launch();
     }
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ddff0b61-f80f-4af6-a0de-828cd68eb743\" name=\"Changes\" comment=\"db connection&#10;all vars required to make connection to database\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/HelloController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/HelloController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/SearchDB.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/SearchDB.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"9b50c4d5d81ac9bf0335bccb7c55c2d5957600a9\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2aWwkiE1JdQ4q8LiG9DdIZzKoc5\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"Application.HelloApplication.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"featureBranch\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/sqljdbc_12.4/enu/jars/mssql-jdbc-12.4.1.jre11.jar\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Global Libraries\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"editor.preferences.jsOptions\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-18.0.2-corretto-18.0.2-f644763e9732-da6bd485\" />\r\n        <option value=\"jdk-20.0.2-corretto-20.0.2.1-f644763e9732-27d99999\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ddff0b61-f80f-4af6-a0de-828cd68eb743\" name=\"Changes\" comment=\"\" />\r\n      <created>1704447792137</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1704447792137</updated>\r\n      <workItem from=\"1704447793679\" duration=\"4969000\" />\r\n      <workItem from=\"1704702415377\" duration=\"1504000\" />\r\n      <workItem from=\"1704704006836\" duration=\"4223000\" />\r\n      <workItem from=\"1704708255532\" duration=\"717000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"First commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704447959572</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704447959573</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"db connection&#10;all vars required to make connection to database\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704705859548</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704705859548</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"databaseConnection\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"First commit\" />\r\n    <MESSAGE value=\"db connection&#10;all vars required to make connection to database\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"db connection&#10;all vars required to make connection to database\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 68d86cdd3be5db2eaa33edd4c7dcce45acb6988b)
+++ b/.idea/workspace.xml	(date 1704880167183)
@@ -6,7 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="ddff0b61-f80f-4af6-a0de-828cd68eb743" name="Changes" comment="db connection&#10;all vars required to make connection to database">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/HelloController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/HelloController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/HelloApplication.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/SearchDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/mediaplayerproject/SearchDB.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -24,7 +24,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="9b50c4d5d81ac9bf0335bccb7c55c2d5957600a9" />
+        <entry key="$PROJECT_DIR$" value="createPlaylist" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -50,29 +50,29 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "Application.HelloApplication.executor": "Run",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "featureBranch",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/sqljdbc_12.4/enu/jars/mssql-jdbc-12.4.1.jre11.jar",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Global Libraries",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "editor.preferences.jsOptions",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;featureBranch&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/sqljdbc_12.4/enu/jars/mssql-jdbc-12.4.1.jre11.jar&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Global Libraries&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.jsOptions&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -127,7 +127,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="databaseConnection" />
+                        <option value="createPlaylist" />
                       </list>
                     </value>
                   </entry>
